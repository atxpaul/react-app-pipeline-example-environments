name: Main

on:
    push:
        branches:
            - main
            - release/*
    pull_request:
        branches:
            - main
    workflow_dispatch:
        inputs:
            workflow_title:
                description: 'Title for workflow'
                required: false
                default: 'Main Workflow'
            environment:
                description: environment to deploy to
                required: false
                type: string
                default: 'staging'

run-name: ${{ inputs.workflow_title }}

jobs:
    set_environment:
        runs-on: ubuntu-latest
        outputs:
            DEPLOY_ENV: ${{ steps.set_env.outputs.DEPLOY_ENV }}
        steps:
            - name: Set DEPLOY_ENV
              id: set_env
              run: |
                  echo "DEPLOY_ENV=${{ inputs.environment || (startsWith(github.ref, 'refs/heads/release/') && 'production' || 'staging') }}" >> $GITHUB_OUTPUT

    lint:
        uses: ./.github/workflows/_lint.yml
        secrets: inherit
        needs: [set_environment]

    unittest:
        uses: ./.github/workflows/_unittest.yml
        secrets: inherit
        needs: [lint]

    deploy:
        uses: ./.github/workflows/_deploy.yml
        secrets: inherit
        needs: [unittest, set_environment]
        with:
            environment: ${{ needs.set_environment.outputs.DEPLOY_ENV }}

    e2e:
        uses: ./.github/workflows/_e2e.yml
        secrets: inherit
        needs: [deploy]
        with:
            base-url: ${{ needs.deploy.outputs.app_url }}

    tag_stable:
        uses: './.github/workflows/_tag_stable.yml'
        needs: [e2e, set_environment]
        if: success() && (github.event_name != 'pull_request' || github.event_name != 'workflow_dispatch')
        with:
            environment: ${{ needs.set_environment.outputs.DEPLOY_ENV }}

    rollback:
        uses: './.github/workflows/_rollback.yml'
        needs: [e2e, set_environment]
        if: failure()
        with:
            environment: ${{ needs.set_environment.outputs.DEPLOY_ENV }}
